LIBNAME SASDATA "/folders/myfolders";

DATA IVF;
	SET SASDATA.IVF;
	WHERE PER = 4;
RUN;


* 1.1;
proc summary print Data = IVF n;
	var ID, TRT;
	output out = ivf_summary n = n;
run;
data _null_;
  	set ivf_summary;
	call symput("total_entries", n);
run;
%PUT &=total_entries;
proc freq data = IVF;
	tables TRT /nopercent nocum;
run;


* 1.2;
* a);
PROC MEANS DATA = IVF MEAN VAR CLM;
	VAR AGEM;
	output out=want mean(AGEM) = mean_agem var(AGEM) = variance_agem;
RUN;
proc means data = IVF mean std n;
	var agem;
	output out = bw_sumstat;
run;
proc transpose data = agem_sumstat out = agem_PI (DROP= _TYPE_ _FREQ_ _NAME_ _LABEL_);
	by _type_ _freq_;
	id _stat_;
run;
data agem_PI;
	set agem_PI;
	T = QUANTILE("T", 1 - 0.05 / 2, N - 1);
	LPL = MEAN - T * std * sqrt((N + 1) / N);
	UPL = MEAN + T * std * sqrt((N + 1) / N);
run;
proc print DATA = agem_PI;
	var LPL UPL;
run;

* b);
proc summary DATA = IVF noprint;
	WHERE AGEM > 40;
	var AGEM;
	OUTPUT OUT = outdata N = n;
run;

proc freq data = IVF;
	tables AGEM /nopercent nocum;
	WHERE AGEM > 40;
run;

* c);
ods select BasicIntervals;
proc univariate data = IVF cibasic(alpha = .05);
   var AGEM;
run;


* 1.3;
* a);
Proc MEANS Data = IVF qrange q1 q3;
	var BW;
	output out = means qrange = bw_q_range median = bw_median q1 = q1 q3 = q3;
run;
data _null_;
  set means;
  call symput("bw_median", bw_median);
  call symput("bw_q_range", bw_q_range);
  call symput("q1", q1);
  call symput("q3", q3);
run;
proc iml;
	use ivf;
	read all var{bw};
	close ivf;
	alpha = 0.05;
	temp_q1 = (bw < &q1);
	temp_q3 = (bw < &q3);
	Ybar1 = mean(temp_q1);
	Ybar3 = mean(temp_q3);
	s1 = Ybar1 * (1 - Ybar1);
	s3 = Ybar3 * (1 - Ybar3);
	n1 = nrow(temp_q1);
	n3 = nrow(temp_q3);
	z = quantile('Normal', 1 - alpha / 2);
	UCL1 = Ybar1 + z * sqrt(s1 / n1);
	LCL1 = Ybar1 - z * sqrt(s1 / n1);
	UCL3 = Ybar3 + z * sqrt(s3 / n3);
	LCL3 = Ybar3 - z * sqrt(s3 / n3);
	p1 = LCL1 || UCL1;
	p3 = LCL3 || UCL3;
	call qntl(q1, bw, p1);
	call qntl(q3, bw, p3);
	A = q1 || q3;
	create PROP from A[colname = {'LCL' 'UCL'}];
	append from A;
	close PROP;
quit;

* b);
Proc MEANS Data = IVF qrange p25 p75;
	var BW;
	output out = means qrange = bw_q_range median = bw_median
run;
%put &=bw_median;
%put &=bw_q_range;
Data inner_quartile;
	SET IVF;
	WHERE BW <= &bw_median + &bw_q_range and BW >= &bw_median - &bw_q_range;
run;
proc summary data = inner_quartile;
	var ID;
	output out = inner_quartile_summary n = n;
run;
data _null_;
  	set inner_quartile_summary;
	call symput("inner_quartile_count", n);
run;
data calculation;
	percentage = &inner_quartile_count / &total_entries * 100;
run;
proc print data = calculation; run;

* c);
ods select Histogram;
proc univariate DATA = IVF;
	var BW;
   	histogram BW;
run;
DATA IVFBOXCOX;
	SET IVF;
	BWMINUS2 = (-1/2)*(BW**-2 -1);
	BWMINUS12 = (-2)*(BW**-(0.5)-1);
	BW0 = log(BW);
	BW12 = (2)*(BW**(1/2) -1);
	BW2 = (0.5)*(BW**(2) -1);
RUN;
ods select histogram;
proc univariate data = IVFBOXCOX;
	histogram BWMINUS2 /normal;
	histogram BWMINUS12 /normal;
	histogram BW0 /normal;
	histogram BW12 /normal;
	histogram BW2 /normal;
	histogram BW /normal;
run;

* d);
proc means data = IVF mean std n;
	var BW;
	output out = bw_sumstat;
run;
proc transpose data = bw_sumstat out = bw_PI (DROP= _TYPE_ _FREQ_ _NAME_ _LABEL_);
	by _type_ _freq_;
	id _stat_;
run;
data bw_PI;
	set bw_PI;
	T = QUANTILE("T", 1 - 0.05 / 2, N - 1);
	LPL = MEAN - T * std * sqrt((N + 1) / N);
	UPL = MEAN + T * std * sqrt((N + 1) / N);
run;
proc print DATA = bw_PI;
	var LPL UPL;
run;

* e);
proc sort data = ivf;
	by SEX;
run;
proc means data=IVF max;
	by SEX;
	var BW;
run;

* f);
proc freq data = ivf;
	tables SEX /nofreq nocum;
run;
proc means data=IVF MEAN VAR KURT SKEW;
	by SEX;
	var BW;
run;

* g);
proc means data = IVF mean std n;
	var BW;
	by SEX;
	output out = bw_sumstat;
run;
proc transpose data = bw_sumstat out = bw_PI (DROP= _TYPE_ _FREQ_ _NAME_ _LABEL_);
	by _type_ _freq_;
	id _stat_;
run;
data bw_PI;
	set bw_PI;
	by SEX;
	T = QUANTILE("T", 1 - 0.05 / 2, N - 1);
	LPL = MEAN - T * std * sqrt((N + 1) / N);
	UPL = MEAN + T * std * sqrt((N + 1) / N);
run;
proc print DATA = bw_PI;
	var LPL UPL;
run;


* 1.6;
* a);
data trans_ga; 
	set ivf;
	log_ga = log(44 - GA);
run;
ods select histogram;
proc univariate data = trans_ga;
	histogram GA /normal;
	histogram log_ga /normal;
run;
proc means data = trans_ga mean std n;
	var log_ga;
	output out = log_ga_sumstat;
run;
proc transpose data = log_ga_sumstat out = log_ga_PI  (DROP = _TYPE_ _FREQ_ _NAME_ _LABEL_);
	by _type_ _freq_;
	id _stat_;
run;
data log_ga_PI;
	set log_ga_PI;
	T = QUANTILE("T", 1 - 0.05 / 2, N - 1);
	LPL = MEAN - T * std * sqrt((N + 1) / N);
	UPL = MEAN + T * std * sqrt((N + 1) / N);
	LPL_GA = 44 - EXP(UPL);
	UPL_GA = 44 - EXP(LPL);
run;
proc print DATA = log_ga_PI;
	var LPL_GA UPL_GA;
run;

* b);
proc means data = trans_ga mean clm;
	var log_ga;
run;
	
* c);
proc iml;
	use ivf;
	read all var{ga};
	close ivf;
	alpha = 0.05;
	temp_med = (ga < median(ga));
	Ybar = mean(temp_med);
	s = Ybar * (1 - Ybar);
	n = nrow(temp_med);
	z = quantile('Normal', 1 - alpha / 2);
	UCL = Ybar + z * sqrt(s / n);
	LCL = Ybar - z * sqrt(s / n);
	p = LCL || UCL;
	call qntl(q, ga, p);
	print q[rowname = {'LCL', 'UCL'}];
quit;

* d);
data ivf_pre;
	set ivf;
	pre_term = ga <= 38;
	keep ga pre_term fis;
run;	

* e);
proc freq data = ivf_pre;
	where pre_term = 1;
	tables fis /nocum;
run;
proc freq data = ivf_pre;
	where pre_term = 0;
	tables fis /nocum;
run;

* f);

proc iml;
	use ivf_pre;
	read all var{ga fis pre_term};
	close ivf_pre;
	alpha = 0.1;
	temp_q1 = (ga < median(ga));
	Ybar = mean(temp_med);
	s = Ybar * (1 - Ybar);
	n = nrow(temp_med);
	z = quantile('Normal', 1 - alpha / 2);
	UCL = Ybar + z * sqrt(s / n);
	LCL = Ybar - z * sqrt(s / n);
	p = LCL || UCL;
	call qntl(q, ga, p);
	print q[rowname = {'LCL', 'UCL'}];
quit;

* g);


* 1.8;
* a);
proc iml;
	use ivf;
	read all var{bw};
	close ivf;
	var = var(bw);
	Ybar = mean(temp_med);
quit;
	
proc ttest data = ivf;
	var bw;
run;
